<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classGameMain" kind="class" language="C++" prot="public">
    <compoundname>GameMain</compoundname>
    <basecompoundref refid="classMain" prot="public" virt="non-virtual">Main</basecompoundref>
    <includes local="no">GameMain.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classGameMain_1af42b1d8da46f0bd6298acdc159027857" prot="private" static="yes" mutable="no">
        <type><ref refid="classLogger" kindref="compound">Logger</ref> *</type>
        <definition>Logger * logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= <ref refid="classLogger_1ac11c529e5152e544fbc4c6594add48b6" kindref="member">Logger::getLogger</ref>(&quot;de.hackcraft.game.GameMain&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="36" column="19" bodyfile="de/hackcraft/game/GameMain.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classGameMain_1afb2a2ba356e9985841dca0510ec3b789" prot="public" static="yes" mutable="no">
        <type><ref refid="classGameMain" kindref="compound">GameMain</ref> *</type>
        <definition>GameMain * instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <initializer>= NULL</initializer>
        <briefdescription>
<para>Points to the main instance, necessary because of c-callbacks/threads. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="39" column="21" bodyfile="de/hackcraft/game/GameMain.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGameMain_1a1879a9682baebf5279703e5051aff4a1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classGLFramebuffer" kindref="compound">GLFramebuffer</ref> * &gt; *</type>
        <definition>std::vector&lt;GLFramebuffer*&gt;* renderbuffer</definition>
        <argsstring></argsstring>
        <name>renderbuffer</name>
        <briefdescription>
<para>Frame-buffer for initial 3d to 2d rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="43" column="17" bodyfile="de/hackcraft/game/GameMain.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a4fdcc5f52de5965cbccc9356e8dfbeba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classGLFramebuffer" kindref="compound">GLFramebuffer</ref> * &gt; *</type>
        <definition>std::vector&lt;GLFramebuffer*&gt;* effectbuffer</definition>
        <argsstring></argsstring>
        <name>effectbuffer</name>
        <briefdescription>
<para>Frame-buffer for 2d deferred-/post-processing and effect application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="46" column="17" bodyfile="de/hackcraft/game/GameMain.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a43e1b8f5f7b16def11e966d5291df08b" prot="private" static="no" mutable="no">
        <type><ref refid="classGLFramebuffer" kindref="compound">GLFramebuffer</ref> *</type>
        <definition>GLFramebuffer* screenbuffer</definition>
        <argsstring></argsstring>
        <name>screenbuffer</name>
        <briefdescription>
<para>Frame-buffer for final display if the effect-buffer wasn&apos;t the final. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="49" column="19" bodyfile="de/hackcraft/game/GameMain.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a06360e1b02005dcb058a4bdfdc686232" prot="private" static="no" mutable="no">
        <type><ref refid="structGameConfig" kindref="compound">GameConfig</ref> *</type>
        <definition>GameConfig* config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <briefdescription>
<para>Current game configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="52" column="16" bodyfile="de/hackcraft/game/GameMain.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a98fe5761e4739128dd41fd8ed355efeb" prot="private" static="no" mutable="no">
        <type><ref refid="classGameMission" kindref="compound">GameMission</ref> *</type>
        <definition>GameMission* mission</definition>
        <argsstring></argsstring>
        <name>mission</name>
        <briefdescription>
<para>Current mission/game controller. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="55" column="17" bodyfile="de/hackcraft/game/GameMain.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a38026b801fec560c0322d4e5b6cab8be" prot="private" static="no" mutable="no">
        <type><ref refid="classWorld" kindref="compound">World</ref> *</type>
        <definition>World* world</definition>
        <argsstring></argsstring>
        <name>world</name>
        <briefdescription>
<para>Instance of the world we are on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="58" column="11" bodyfile="de/hackcraft/game/GameMain.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1ae7cf9b371ee9681eebc9f309d172381b" prot="private" static="no" mutable="no">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity* camera</definition>
        <argsstring></argsstring>
        <name>camera</name>
        <briefdescription>
<para>Seeing the world through which object&apos;s eyes? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="61" column="12" bodyfile="de/hackcraft/game/GameMain.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a5790d554e305e1f05c3b77da304be658" prot="private" static="no" mutable="no">
        <type><ref refid="classPad" kindref="compound">Pad</ref> *</type>
        <definition>Pad* pad1</definition>
        <argsstring></argsstring>
        <name>pad1</name>
        <briefdescription>
<para>Keyboard/Joystick inputs sent to which Virtual-Gamepad? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="64" column="9" bodyfile="de/hackcraft/game/GameMain.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1ac6c474e1d1512fd36f0d8519a3ff6597" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* joy0</definition>
        <argsstring></argsstring>
        <name>joy0</name>
        <briefdescription>
<para>Low level joystick handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="67" column="10" bodyfile="de/hackcraft/game/GameMain.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a1eae9ec9a3a008d06b3c1554d0953b28" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mouseWheel</definition>
        <argsstring></argsstring>
        <name>mouseWheel</name>
        <briefdescription>
<para>SDL doesn&apos;t count mouse wheel movement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="70" column="9" bodyfile="de/hackcraft/game/GameMain.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a7c465c52a44d1a215cdb1773589ba093" prot="private" static="no" mutable="no">
        <type>Uint8</type>
        <definition>Uint8 keystate_[512]</definition>
        <argsstring>[512]</argsstring>
        <name>keystate_</name>
        <briefdescription>
<para>Old keystates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="73" column="11" bodyfile="de/hackcraft/game/GameMain.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1afa30c6229c22c39c237d23c669349c32" prot="private" static="no" mutable="no">
        <type>std::stringstream</type>
        <definition>std::stringstream oss</definition>
        <argsstring></argsstring>
        <name>oss</name>
        <briefdescription>
<para>stdout is redirected to this stringstream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="76" column="23" bodyfile="de/hackcraft/game/GameMain.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a3710dab214987244cd3fcd00dea5e7b4" prot="private" static="no" mutable="no">
        <type>std::streambuf *</type>
        <definition>std::streambuf* stdout_</definition>
        <argsstring></argsstring>
        <name>stdout_</name>
        <briefdescription>
<para>Old stdout used to restore stdout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="79" column="20" bodyfile="de/hackcraft/game/GameMain.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1ab7574ae9b803f71f79c317940bd2aaff" prot="private" static="no" mutable="no">
        <type><ref refid="classGapBuffer" kindref="compound">GapBuffer</ref> *</type>
        <definition>GapBuffer* log</definition>
        <argsstring></argsstring>
        <name>log</name>
        <briefdescription>
<para>Program output log. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="82" column="15" bodyfile="de/hackcraft/game/GameMain.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a6ace053b79f8887c41e141a362660c51" prot="private" static="no" mutable="no">
        <type><ref refid="classGapBuffer" kindref="compound">GapBuffer</ref> *</type>
        <definition>GapBuffer* console</definition>
        <argsstring></argsstring>
        <name>console</name>
        <briefdescription>
<para><ref refid="classConsole" kindref="compound">Console</ref> terminal program output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="85" column="15" bodyfile="de/hackcraft/game/GameMain.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a507b88d0606197e8cd4e2629ced27867" prot="private" static="no" mutable="no">
        <type><ref refid="classGapBuffer" kindref="compound">GapBuffer</ref> *</type>
        <definition>GapBuffer* cmdline</definition>
        <argsstring></argsstring>
        <name>cmdline</name>
        <briefdescription>
<para>Commandline input buffer for console. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="88" column="15" bodyfile="de/hackcraft/game/GameMain.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1ac204a23e082f290f039041b1f3f7323e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool overlayEnabled</definition>
        <argsstring></argsstring>
        <name>overlayEnabled</name>
        <briefdescription>
<para>Command &amp; Control Overlay enabled =&gt; redirect keyboard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="91" column="10" bodyfile="de/hackcraft/game/GameMain.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameMain_1a1d39aac66e12dae50a24cd7a9100ef33" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool done</definition>
        <argsstring></argsstring>
        <name>done</name>
        <briefdescription>
<para>Used to signal forked working threads (log, BGM) to terminate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="94" column="10" bodyfile="de/hackcraft/game/GameMain.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGameMain_1ae610487d2f10da5db8526a4b57ccc78d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void applyEffectFilter</definition>
        <argsstring>(GLFramebuffer *source)</argsstring>
        <name>applyEffectFilter</name>
        <param>
          <type><ref refid="classGLFramebuffer" kindref="compound">GLFramebuffer</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Apply post-processing filter right after drawing frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="98" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="231" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a1713e60ae1080a8fbc19197639f140fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void applyProjectionFilter</definition>
        <argsstring>(GLFramebuffer *sourceLeft, GLFramebuffer *sourceRight)</argsstring>
        <name>applyProjectionFilter</name>
        <param>
          <type><ref refid="classGLFramebuffer" kindref="compound">GLFramebuffer</ref> *</type>
          <declname>sourceLeft</declname>
        </param>
        <param>
          <type><ref refid="classGLFramebuffer" kindref="compound">GLFramebuffer</ref> *</type>
          <declname>sourceRight</declname>
        </param>
        <briefdescription>
<para>Apply optional projection filter after optional post-processing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="101" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="324" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1ad88747f7a4de5a2c7d248d3dde375249" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init</definition>
        <argsstring>(int argc, char **args)</argsstring>
        <name>init</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Initializes called at the start of the run method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="105" column="9" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="844" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a967fb9235af58c66165b0d619c6cc584" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void deinit</definition>
        <argsstring>()</argsstring>
        <name>deinit</name>
        <briefdescription>
<para>Initializes called at the end of the run method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="108" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="1137" bodyend="1148"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a947fa1aa28995868d9c0e5c9a5304ed7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initGL</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>initGL</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets initial OpenGL mode parameters (dis-/enables and values). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="111" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="92" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1afc6248f4025c736eedfb6c581ad76a2c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initMission</definition>
        <argsstring>()</argsstring>
        <name>initMission</name>
        <briefdescription>
<para>Starts and initializes Mission according to the current game attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="116" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="211" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a4425ca86d9acf92eb2cd7490ef16d236" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateKey</definition>
        <argsstring>(Uint8 keysym)</argsstring>
        <name>updateKey</name>
        <param>
          <type>Uint8</type>
          <declname>keysym</declname>
        </param>
        <briefdescription>
<para>Handles &quot;special&quot; keys for things like rendering options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="119" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="565" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1af2e87a48e8e53f1d6c060ae5c0533eb5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updatePad</definition>
        <argsstring>(Pad *pad, SDL_Joystick *joy)</argsstring>
        <name>updatePad</name>
        <param>
          <type><ref refid="classPad" kindref="compound">Pad</ref> *</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>SDL_Joystick *</type>
          <declname>joy</declname>
        </param>
        <briefdescription>
<para>Reads joystick/keyboard input and maps it to to a Gamepad structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="122" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="617" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a508515fdb51fd5d2de8ccf89368837ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateFrame</definition>
        <argsstring>(int elapsed_msec)</argsstring>
        <name>updateFrame</name>
        <param>
          <type>int</type>
          <declname>elapsed_msec</declname>
        </param>
        <briefdescription>
<para>Updating the world for the given delta time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="125" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="390" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a0ec193fce6ea41b4a674fa3180f90aa1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawFrame</definition>
        <argsstring>()</argsstring>
        <name>drawFrame</name>
        <briefdescription>
<para>Draws a single frame for the whole screen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="128" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="428" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a2a40dabc8d3c84929197faff51c26a12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawFramelet</definition>
        <argsstring>(int eye, float shift)</argsstring>
        <name>drawFramelet</name>
        <param>
          <type>int</type>
          <declname>eye</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Draws a single frame for one eye. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="131" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="448" bodyend="525"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGameMain_1a99bcf1aa8115dbf329153a93c8f8ba99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GameMain</definition>
        <argsstring>()</argsstring>
        <name>GameMain</name>
        <briefdescription>
<para>Constructor sets instance pointer among other things. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="135" column="5" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="47" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a050a819e893602f7a638fb6a2e9c2897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~GameMain</definition>
        <argsstring>()</argsstring>
        <name>~GameMain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="137" column="5" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1abe3f39b90a2607886ec971efda7f9b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int run</definition>
        <argsstring>(int argc, char **args)</argsstring>
        <name>run</name>
        <reimplements refid="classMain_1ae82b1a64c0381d68ae2dc1a045b56c00">run</reimplements>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Called directly by the main entry point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="140" column="9" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="1005" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a7f2dbc4a6d938050c30ffdf0a94440ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void runOutputJob</definition>
        <argsstring>()</argsstring>
        <name>runOutputJob</name>
        <briefdescription>
<para>Forked from run/init to shovel output within a concurrent thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="143" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="1119" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1ae66ecde485597a3c2159bbc3e23eb903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void runBGMJob</definition>
        <argsstring>()</argsstring>
        <name>runBGMJob</name>
        <briefdescription>
<para>Forked from run/init to shovel BGM within a concurrent thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="146" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="1128" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a4557ec3f21c83d21eae332e4e525f5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int alEnableSystem</definition>
        <argsstring>(bool en)</argsstring>
        <name>alEnableSystem</name>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
<para>Enables and disables OpenAL Audio-System. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="149" column="9" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="715" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a815cb121358db6eb684ae9435e973f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawLog</definition>
        <argsstring>()</argsstring>
        <name>drawLog</name>
        <briefdescription>
<para>Experiment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="152" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="528" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a3f70ec13c771ff620cb3a412276ebda7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawPlaque</definition>
        <argsstring>()</argsstring>
        <name>drawPlaque</name>
        <briefdescription>
<para>Experiment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="155" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="760" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="classGameMain_1a8ca676f7b9501866c52ffea4d9cae5d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateLog</definition>
        <argsstring>()</argsstring>
        <name>updateLog</name>
        <briefdescription>
<para>Experiment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/game/GameMain.h" line="158" column="10" bodyfile="de/hackcraft/game/GameMain.cpp" bodystart="829" bodyend="841"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encapsulates low level system-, startup- and io-code. </para>
    </briefdescription>
    <detaileddescription>
<para>Actually it is just a collection of what would be functions otherwise. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>GameMain</label>
        <link refid="classGameMain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Main</label>
        <link refid="classMain"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="30">
        <label>unordered_map&lt; Geokey, std::list&lt; Entity * &gt; &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>stringstream</label>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vector&lt; Binding * &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Component</label>
        <link refid="structComponent"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+object</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+prebinds</edgelabel>
          <edgelabel>+postbinds</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+cname</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>World</label>
        <link refid="classWorld"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>-mIndex</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>-mVisobjects</edgelabel>
          <edgelabel>-mUncluster</edgelabel>
          <edgelabel>-mCorpses</edgelabel>
          <edgelabel>-mObjects</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>+subsystems</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>-mTiming</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>-mGeomap</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>+instance</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>-mGroupIndex</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>GLFramebuffer</label>
        <link refid="classGLFramebuffer"/>
      </node>
      <node id="32">
        <label>LevelStreamLogger</label>
        <link refid="classLevelStreamLogger"/>
        <childnode refid="13" relation="usage">
          <edgelabel>-logstream</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>vector&lt; GLFramebuffer * &gt;</label>
        <childnode refid="21" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>basic_istream&lt; Char &gt;</label>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>string</label>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>basic_iostream&lt; Char &gt;</label>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>map&lt; OID, Entity * &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>GameMission</label>
        <link refid="classGameMission"/>
        <childnode refid="11" relation="usage">
          <edgelabel>#mDefeat</edgelabel>
          <edgelabel>#mVictory</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>map&lt; OID, World::Group * &gt;</label>
        <childnode refid="35" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>Group</label>
        <link refid="structWorld_1_1Group"/>
        <childnode refid="36" relation="usage">
          <edgelabel>+members</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+name</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>Subsystem</label>
        <link refid="classSubsystem"/>
      </node>
      <node id="9">
        <label>basic_string&lt; char &gt;</label>
      </node>
      <node id="31">
        <label>Logger</label>
        <link refid="classLogger"/>
        <childnode refid="32" relation="usage">
          <edgelabel>-infoLogger</edgelabel>
          <edgelabel>-traceLogger</edgelabel>
          <edgelabel>-warnLogger</edgelabel>
          <edgelabel>-errorLogger</edgelabel>
          <edgelabel>-debugLogger</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>-globalAppender</edgelabel>
          <edgelabel>-appender</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-qualifiedLoggerName</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>-parentLogger</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>list&lt; Subsystem * &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>GapBuffer</label>
        <link refid="classGapBuffer"/>
      </node>
      <node id="3">
        <label>Entity</label>
        <link refid="classEntity"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+components</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+name</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Binding</label>
        <link refid="classBinding"/>
      </node>
      <node id="33">
        <label>Appender</label>
        <link refid="classAppender"/>
      </node>
      <node id="28">
        <label>Timing</label>
        <link refid="classTiming"/>
      </node>
      <node id="18">
        <label>ios_base</label>
      </node>
      <node id="26">
        <label>list&lt; Entity * &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>vector&lt; Entity * &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>basic_ostream&lt; Char &gt;</label>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>basic_ios&lt; Char &gt;</label>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>GameMain</label>
        <link refid="classGameMain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-camera</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>-mission</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-config</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>-oss</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>-effectbuffer</edgelabel>
          <edgelabel>-renderbuffer</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>+instance</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>-screenbuffer</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>-log</edgelabel>
          <edgelabel>-cmdline</edgelabel>
          <edgelabel>-console</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>-world</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>-pad1</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>vector&lt; Component * &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>basic_stringstream&lt; char &gt;</label>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>list&lt; OID &gt;</label>
      </node>
      <node id="29">
        <label>Geomap&lt; Entity * &gt;</label>
        <link refid="classGeomap"/>
        <childnode refid="30" relation="usage">
          <edgelabel>-geomap</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>Pad</label>
        <link refid="classPad"/>
      </node>
      <node id="2">
        <label>Main</label>
        <link refid="classMain"/>
      </node>
      <node id="12">
        <label>GameConfig</label>
        <link refid="structGameConfig"/>
        <childnode refid="8" relation="usage">
          <edgelabel>+bgm</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="de/hackcraft/game/GameMain.h" line="34" column="27" bodyfile="de/hackcraft/game/GameMain.h" bodystart="34" bodyend="159"/>
    <listofallmembers>
      <member refid="classGameMain_1a4557ec3f21c83d21eae332e4e525f5cc" prot="public" virt="non-virtual"><scope>GameMain</scope><name>alEnableSystem</name></member>
      <member refid="classGameMain_1ae610487d2f10da5db8526a4b57ccc78d" prot="private" virt="non-virtual"><scope>GameMain</scope><name>applyEffectFilter</name></member>
      <member refid="classGameMain_1a1713e60ae1080a8fbc19197639f140fb" prot="private" virt="non-virtual"><scope>GameMain</scope><name>applyProjectionFilter</name></member>
      <member refid="classGameMain_1ae7cf9b371ee9681eebc9f309d172381b" prot="private" virt="non-virtual"><scope>GameMain</scope><name>camera</name></member>
      <member refid="classGameMain_1a507b88d0606197e8cd4e2629ced27867" prot="private" virt="non-virtual"><scope>GameMain</scope><name>cmdline</name></member>
      <member refid="classGameMain_1a06360e1b02005dcb058a4bdfdc686232" prot="private" virt="non-virtual"><scope>GameMain</scope><name>config</name></member>
      <member refid="classGameMain_1a6ace053b79f8887c41e141a362660c51" prot="private" virt="non-virtual"><scope>GameMain</scope><name>console</name></member>
      <member refid="classGameMain_1a967fb9235af58c66165b0d619c6cc584" prot="private" virt="non-virtual"><scope>GameMain</scope><name>deinit</name></member>
      <member refid="classGameMain_1a1d39aac66e12dae50a24cd7a9100ef33" prot="private" virt="non-virtual"><scope>GameMain</scope><name>done</name></member>
      <member refid="classGameMain_1a0ec193fce6ea41b4a674fa3180f90aa1" prot="private" virt="non-virtual"><scope>GameMain</scope><name>drawFrame</name></member>
      <member refid="classGameMain_1a2a40dabc8d3c84929197faff51c26a12" prot="private" virt="non-virtual"><scope>GameMain</scope><name>drawFramelet</name></member>
      <member refid="classGameMain_1a815cb121358db6eb684ae9435e973f6a" prot="public" virt="non-virtual"><scope>GameMain</scope><name>drawLog</name></member>
      <member refid="classGameMain_1a3f70ec13c771ff620cb3a412276ebda7" prot="public" virt="non-virtual"><scope>GameMain</scope><name>drawPlaque</name></member>
      <member refid="classGameMain_1a4fdcc5f52de5965cbccc9356e8dfbeba" prot="private" virt="non-virtual"><scope>GameMain</scope><name>effectbuffer</name></member>
      <member refid="classGameMain_1a99bcf1aa8115dbf329153a93c8f8ba99" prot="public" virt="non-virtual"><scope>GameMain</scope><name>GameMain</name></member>
      <member refid="classGameMain_1ad88747f7a4de5a2c7d248d3dde375249" prot="private" virt="non-virtual"><scope>GameMain</scope><name>init</name></member>
      <member refid="classGameMain_1a947fa1aa28995868d9c0e5c9a5304ed7" prot="private" virt="non-virtual"><scope>GameMain</scope><name>initGL</name></member>
      <member refid="classGameMain_1afc6248f4025c736eedfb6c581ad76a2c" prot="private" virt="non-virtual"><scope>GameMain</scope><name>initMission</name></member>
      <member refid="classGameMain_1afb2a2ba356e9985841dca0510ec3b789" prot="public" virt="non-virtual"><scope>GameMain</scope><name>instance</name></member>
      <member refid="classGameMain_1ac6c474e1d1512fd36f0d8519a3ff6597" prot="private" virt="non-virtual"><scope>GameMain</scope><name>joy0</name></member>
      <member refid="classGameMain_1a7c465c52a44d1a215cdb1773589ba093" prot="private" virt="non-virtual"><scope>GameMain</scope><name>keystate_</name></member>
      <member refid="classGameMain_1ab7574ae9b803f71f79c317940bd2aaff" prot="private" virt="non-virtual"><scope>GameMain</scope><name>log</name></member>
      <member refid="classGameMain_1af42b1d8da46f0bd6298acdc159027857" prot="private" virt="non-virtual"><scope>GameMain</scope><name>logger</name></member>
      <member refid="classGameMain_1a98fe5761e4739128dd41fd8ed355efeb" prot="private" virt="non-virtual"><scope>GameMain</scope><name>mission</name></member>
      <member refid="classGameMain_1a1eae9ec9a3a008d06b3c1554d0953b28" prot="private" virt="non-virtual"><scope>GameMain</scope><name>mouseWheel</name></member>
      <member refid="classGameMain_1afa30c6229c22c39c237d23c669349c32" prot="private" virt="non-virtual"><scope>GameMain</scope><name>oss</name></member>
      <member refid="classGameMain_1ac204a23e082f290f039041b1f3f7323e" prot="private" virt="non-virtual"><scope>GameMain</scope><name>overlayEnabled</name></member>
      <member refid="classGameMain_1a5790d554e305e1f05c3b77da304be658" prot="private" virt="non-virtual"><scope>GameMain</scope><name>pad1</name></member>
      <member refid="classGameMain_1a1879a9682baebf5279703e5051aff4a1" prot="private" virt="non-virtual"><scope>GameMain</scope><name>renderbuffer</name></member>
      <member refid="classGameMain_1abe3f39b90a2607886ec971efda7f9b6a" prot="public" virt="virtual"><scope>GameMain</scope><name>run</name></member>
      <member refid="classGameMain_1ae66ecde485597a3c2159bbc3e23eb903" prot="public" virt="non-virtual"><scope>GameMain</scope><name>runBGMJob</name></member>
      <member refid="classGameMain_1a7f2dbc4a6d938050c30ffdf0a94440ea" prot="public" virt="non-virtual"><scope>GameMain</scope><name>runOutputJob</name></member>
      <member refid="classGameMain_1a43e1b8f5f7b16def11e966d5291df08b" prot="private" virt="non-virtual"><scope>GameMain</scope><name>screenbuffer</name></member>
      <member refid="classGameMain_1a3710dab214987244cd3fcd00dea5e7b4" prot="private" virt="non-virtual"><scope>GameMain</scope><name>stdout_</name></member>
      <member refid="classGameMain_1a508515fdb51fd5d2de8ccf89368837ca" prot="private" virt="non-virtual"><scope>GameMain</scope><name>updateFrame</name></member>
      <member refid="classGameMain_1a4425ca86d9acf92eb2cd7490ef16d236" prot="private" virt="non-virtual"><scope>GameMain</scope><name>updateKey</name></member>
      <member refid="classGameMain_1a8ca676f7b9501866c52ffea4d9cae5d4" prot="public" virt="non-virtual"><scope>GameMain</scope><name>updateLog</name></member>
      <member refid="classGameMain_1af2e87a48e8e53f1d6c060ae5c0533eb5" prot="private" virt="non-virtual"><scope>GameMain</scope><name>updatePad</name></member>
      <member refid="classGameMain_1a38026b801fec560c0322d4e5b6cab8be" prot="private" virt="non-virtual"><scope>GameMain</scope><name>world</name></member>
      <member refid="classGameMain_1a050a819e893602f7a638fb6a2e9c2897" prot="public" virt="non-virtual"><scope>GameMain</scope><name>~GameMain</name></member>
      <member refid="classMain_1ad314ad5c58a53766183aad4c65bec989" prot="public" virt="virtual"><scope>GameMain</scope><name>~Main</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
