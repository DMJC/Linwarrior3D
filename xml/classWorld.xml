<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classWorld" kind="class" language="C++" prot="public">
    <compoundname>World</compoundname>
    <basecompoundref refid="classSubsystem" prot="public" virt="non-virtual">Subsystem</basecompoundref>
    <includes local="no">World.h</includes>
    <innerclass refid="structWorld_1_1Group" prot="private">World::Group</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classWorld_1af42b1d8da46f0bd6298acdc159027857" prot="private" static="yes" mutable="no">
        <type><ref refid="classLogger" kindref="compound">Logger</ref> *</type>
        <definition>Logger * logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= <ref refid="classLogger_1ac11c529e5152e544fbc4c6594add48b6" kindref="member">Logger::getLogger</ref>(&quot;de.hackcraft.world.World&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="42" column="19" bodyfile="de/hackcraft/world/World.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classWorld_1ad93f12e9e0e43f9d988512ae3a51a014" prot="public" static="yes" mutable="no">
        <type><ref refid="classWorld" kindref="compound">World</ref> *</type>
        <definition>World * instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <initializer>= NULL</initializer>
        <briefdescription>
<para>The current <ref refid="classWorld" kindref="compound">World</ref> instance (singleton) other objects may. </para>
        </briefdescription>
        <detaileddescription>
<para>only affect that current instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="46" column="18" bodyfile="de/hackcraft/world/World.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classWorld_1a4790b122e2a356254b470b6cf97bd841" prot="public" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classSubsystem" kindref="compound">Subsystem</ref> * &gt;</type>
        <definition>std::list&lt;Subsystem*&gt; subsystems</definition>
        <argsstring></argsstring>
        <name>subsystems</name>
        <briefdescription>
<para>List of subsystems which serve components to model slices of the world. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="49" column="15" bodyfile="de/hackcraft/world/World.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classWorld_1af72869afa0a88a164369b20cc1e6009c" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref>, <ref refid="classEntity" kindref="compound">Entity</ref> * &gt;</type>
        <definition>std::map&lt;OID, Entity*&gt; mIndex</definition>
        <argsstring></argsstring>
        <name>mIndex</name>
        <briefdescription>
<para>Not yet dispatched messages (because they are not yet overdue). </para>
        </briefdescription>
        <detaileddescription>
<para>Messages already delivered to group participants. Object-ID (OID) to Object-Reference (non-fragged). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="63" column="14" bodyfile="de/hackcraft/world/World.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1afd1bdf08f5d9f879539b18bd7c1504da" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classEntity" kindref="compound">Entity</ref> * &gt;</type>
        <definition>std::list&lt;Entity*&gt; mObjects</definition>
        <argsstring></argsstring>
        <name>mObjects</name>
        <briefdescription>
<para>Contains non-fragged objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="66" column="15" bodyfile="de/hackcraft/world/World.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1ab2eabc419abaf483cdf2b3a91b9348f7" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classEntity" kindref="compound">Entity</ref> * &gt;</type>
        <definition>std::list&lt;Entity*&gt; mCorpses</definition>
        <argsstring></argsstring>
        <name>mCorpses</name>
        <briefdescription>
<para>Contains fragged objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="69" column="15" bodyfile="de/hackcraft/world/World.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1afdfb4e9cf4ea67b6ea0ab103cb92d20e" prot="private" static="no" mutable="no">
        <type><ref refid="classGeomap" kindref="compound">Geomap</ref>&lt; <ref refid="classEntity" kindref="compound">Entity</ref> * &gt;</type>
        <definition>Geomap&lt;Entity*&gt; mGeomap</definition>
        <argsstring></argsstring>
        <name>mGeomap</name>
        <briefdescription>
<para>Allows searching the world in a structured manner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="72" column="12" bodyfile="de/hackcraft/world/World.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1adecc17e660758bc93aaa0f0b96ae7297" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classEntity" kindref="compound">Entity</ref> * &gt;</type>
        <definition>std::list&lt;Entity*&gt; mUncluster</definition>
        <argsstring></argsstring>
        <name>mUncluster</name>
        <briefdescription>
<para>Non-Positional (NaN) and some oversize objects go here for clustering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="75" column="15" bodyfile="de/hackcraft/world/World.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1ad9f8c63ca34d8b9eeee00a39a7aa1d6e" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float mViewdistance</definition>
        <argsstring></argsstring>
        <name>mViewdistance</name>
        <briefdescription>
<para>Render only objects that far away. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="78" column="11" bodyfile="de/hackcraft/world/World.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1aae0ed18d0b84c06229f76ca702257889" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float mVisorigin[3]</definition>
        <argsstring>[3]</argsstring>
        <name>mVisorigin</name>
        <briefdescription>
<para>Rendering origin or camera position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="81" column="11" bodyfile="de/hackcraft/world/World.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1a9c0c47f03549688a4279d736aae1cdc3" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classEntity" kindref="compound">Entity</ref> * &gt; *</type>
        <definition>std::list&lt;Entity*&gt;* mVisobjects</definition>
        <argsstring></argsstring>
        <name>mVisobjects</name>
        <briefdescription>
<para>Visible objects for next rendering - (re-)set in setupView. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="84" column="15" bodyfile="de/hackcraft/world/World.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1a1e8fe9329011c9af5569ddf74d0864c4" prot="private" static="no" mutable="no">
        <type><ref refid="classTiming" kindref="compound">Timing</ref></type>
        <definition>Timing mTiming</definition>
        <argsstring></argsstring>
        <name>mTiming</name>
        <briefdescription>
<para><ref refid="classTiming" kindref="compound">Timing</ref>, simulation stepping, deltacycles, date, fps, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="87" column="12" bodyfile="de/hackcraft/world/World.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWorld_1a37d49890db3c27365bc531ad70cad188" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref>, <ref refid="structWorld_1_1Group" kindref="compound">Group</ref> * &gt;</type>
        <definition>std::map&lt;OID,Group*&gt; mGroupIndex</definition>
        <argsstring></argsstring>
        <name>mGroupIndex</name>
        <briefdescription>
<para>Groups of objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="102" column="14" bodyfile="de/hackcraft/world/World.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classWorld_1a75e827b8787e735882f60c266d58e02e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>World</definition>
        <argsstring>()</argsstring>
        <name>World</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="106" column="5" bodyfile="de/hackcraft/world/World.cpp" bodystart="18" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1ab70719626f2e15f0982e0ff827ef2f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
        <definition>OID getOID</definition>
        <argsstring>()</argsstring>
        <name>getOID</name>
        <briefdescription>
<para>Returns the <ref refid="classObject" kindref="compound">Object</ref> ID valid for this instant&apos;s time &amp; deltacycle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="113" column="9" bodyfile="de/hackcraft/world/World.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a0a0c75e105c26c4910fb0090205da835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTiming" kindref="compound">Timing</ref> *</type>
        <definition>Timing * getTiming</definition>
        <argsstring>()</argsstring>
        <name>getTiming</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="115" column="12" bodyfile="de/hackcraft/world/World.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a2769bfeead57686ff86214f51d6aac22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * getObject</definition>
        <argsstring>(OID oid)</argsstring>
        <name>getObject</name>
        <param>
          <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
          <declname>oid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="117" column="12" bodyfile="de/hackcraft/world/World.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a42082655a5a3194c6797656993cb7ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setViewdistance</definition>
        <argsstring>(float viewdistance)</argsstring>
        <name>setViewdistance</name>
        <param>
          <type>float</type>
          <declname>viewdistance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="119" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a4ab1cf16f005c52aa9a21df948005bee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float getViewdistance</definition>
        <argsstring>()</argsstring>
        <name>getViewdistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="121" column="11" bodyfile="de/hackcraft/world/World.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a95348e90be36514df5e725e94a6f607f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
        <definition>OID getGroup</definition>
        <argsstring>(std::string name)</argsstring>
        <name>getGroup</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Finds and returns a group or creates a new one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="126" column="9" bodyfile="de/hackcraft/world/World.cpp" bodystart="67" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a626e1bf59dacae5eff0bd2a55eb68270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addToGroup</definition>
        <argsstring>(OID gid, Entity *member)</argsstring>
        <name>addToGroup</name>
        <param>
          <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
          <declname>gid</declname>
        </param>
        <param>
          <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Adds a new member to a existing group or creates a new one, returns gid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="129" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a778a28302a6cdf2a1db34032f0893987" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendMessage</definition>
        <argsstring>(OID delay, OID sender, OID recvid, std::string type, std::string text, void *blob=NULL)</argsstring>
        <name>sendMessage</name>
        <param>
          <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
          <declname>delay</declname>
        </param>
        <param>
          <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
          <declname>sender</declname>
        </param>
        <param>
          <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
          <declname>recvid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>text</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>blob</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Now defunct: Sent messages are currently collected with an attached timestamp. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>time offset for sending see <ref refid="classWorld_1ab70719626f2e15f0982e0ff827ef2f2c" kindref="member">getOID()</ref> for calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sender</parametername>
</parameternamelist>
<parameterdescription>
<para>a value of 0 currently defines a broadcast. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recvid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the receiver the message is sent to - 0 null/def receiver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>the message subject/text to send, will be copied to string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blob</parametername>
</parameternamelist>
<parameterdescription>
<para>binary data, you give away ownership may be deleted by world. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="142" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="97" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a469014512118f1b7ca668ac55f3adc2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spawnObject</definition>
        <argsstring>(Entity *object)</argsstring>
        <name>spawnObject</name>
        <param>
          <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Pastes object into active world (mObjects &amp; mIndex), assigns serial OID, increments delta cycle, finally calls object-&gt;onSpawn(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="152" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="110" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a72030924780161aa4321488f7d998265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fragObject</definition>
        <argsstring>(Entity *object)</argsstring>
        <name>fragObject</name>
        <param>
          <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Removes object from active world (mObjects &amp; mIndex), adds object to Corpse-List, adds rRole::FRAGGED role to object, finally object-&gt;onFragged() is called. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that FRAGGED != DEAD objects: Dead objects are still part of the world but fragged objects are removed from the perceptible world. Fragged == removed and scheduled for deletion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="164" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="127" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1aab871676fa0a3ca277a58fe0da726ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bagFragged</definition>
        <argsstring>()</argsstring>
        <name>bagFragged</name>
        <briefdescription>
<para>Deletes fragged objects from Corpse-List. </para>
        </briefdescription>
        <detaileddescription>
<para>Possibly called very rarely within a Mission at transitional moments. This is like garbage collection on demand. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="171" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="137" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a25e7e9f128cce679891e92d685f2c7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void advanceTime</definition>
        <argsstring>(int deltamsec)</argsstring>
        <name>advanceTime</name>
        <reimplements refid="classSubsystem_1ae539443a3a32579b89439ec22aaba32b">advanceTime</reimplements>
        <param>
          <type>int</type>
          <declname>deltamsec</declname>
        </param>
        <briefdescription>
<para>Advance simulation time for one frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="176" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="149" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a306921a31f28265fb44dce35ce857e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void clusterObjects</definition>
        <argsstring>()</argsstring>
        <name>clusterObjects</name>
        <reimplements refid="classSubsystem_1aac346cec652a4bb213bee2a5e74c7fc9">clusterObjects</reimplements>
        <briefdescription>
<para>Re-build spatial clustering of objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="178" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="160" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1aefcbc39cc731e1c193c09a6a98e3ddeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void dispatchMessages</definition>
        <argsstring>()</argsstring>
        <name>dispatchMessages</name>
        <reimplements refid="classSubsystem_1affbd764192264a4e1e440cf073999278">dispatchMessages</reimplements>
        <briefdescription>
<para>Deliver overdue messages to objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="180" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="186" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a1604b9015255299958252d39b1ebb942" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void animateObjects</definition>
        <argsstring>()</argsstring>
        <name>animateObjects</name>
        <reimplements refid="classSubsystem_1a1981e562883e5e69767bec35bcee7af1">animateObjects</reimplements>
        <briefdescription>
<para>Let all objects process input, adjust pose and calculate physics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="182" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="221" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a56676650cac0479af5dde54ada1884e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void transformObjects</definition>
        <argsstring>()</argsstring>
        <name>transformObjects</name>
        <reimplements refid="classSubsystem_1af1f4f853081af6fcb5037b99618009d2">transformObjects</reimplements>
        <briefdescription>
<para>Let all objects calculate transformation matrices etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="184" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="237" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1ad5fb828f792b28fac443a1e1311259b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void setupView</definition>
        <argsstring>(float *pos, float *ori)</argsstring>
        <name>setupView</name>
        <reimplements refid="classSubsystem_1a7e9713a6b941a1ff3e85a2e10cd4946f">setupView</reimplements>
        <param>
          <type>float *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ori</declname>
        </param>
        <briefdescription>
<para>Setup structures for rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="186" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="253" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a465916e327cf3644a812629c8dd6a123" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool drawBack</definition>
        <argsstring>()</argsstring>
        <name>drawBack</name>
        <reimplements refid="classSubsystem_1ab6879b94c7c750768750669e7feb9c97">drawBack</reimplements>
        <briefdescription>
<para>Draws background (skybox) by calling mBackground drawing method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="188" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="278" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a044d5ff7d7174ed434fcebbef82bc275" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void drawSolid</definition>
        <argsstring>()</argsstring>
        <name>drawSolid</name>
        <reimplements refid="classSubsystem_1a7037e4616081238dc81eb0e947cba4f1">drawSolid</reimplements>
        <briefdescription>
<para>Draw all <ref refid="classObject" kindref="compound">Object</ref>&apos;s solid surfaces (calls their drawSolid method). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="190" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="293" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a777e1926a0150b45a189753046343765" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void drawEffect</definition>
        <argsstring>()</argsstring>
        <name>drawEffect</name>
        <reimplements refid="classSubsystem_1a743d69df45ff83f7531c4eeb0e225405">drawEffect</reimplements>
        <briefdescription>
<para>Draw all <ref refid="classObject" kindref="compound">Object</ref>&apos;s effects (calls their drawEffect method). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="192" column="10" bodyfile="de/hackcraft/world/World.cpp" bodystart="320" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a2f6a5479005a82dd0fe04ec6721db53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; <ref refid="classEntity" kindref="compound">Entity</ref> * &gt; *</type>
        <definition>std::list&lt; Entity * &gt; * getGeoInterval</definition>
        <argsstring>(float *min2f, float *max2f, bool addunclustered=false)</argsstring>
        <name>getGeoInterval</name>
        <param>
          <type>float *</type>
          <declname>min2f</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>max2f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>addunclustered</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Find objects within 2d area using location hashkeys. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min2f</parametername>
</parameternamelist>
<parameterdescription>
<para>First corner of square area (smaller values). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max2f</parametername>
</parameternamelist>
<parameterdescription>
<para>Second corner of square area (larger values). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addunclustered</parametername>
</parameternamelist>
<parameterdescription>
<para>Return global unclustered objects, too. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of found objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="204" column="15" bodyfile="de/hackcraft/world/World.cpp" bodystart="366" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classWorld_1a9ee22233c6bcbe79d287efbd750eeb12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float constrainParticle</definition>
        <argsstring>(Entity *ex, float *worldpos, float radius)</argsstring>
        <name>constrainParticle</name>
        <reimplements refid="classSubsystem_1a1954eb6f5a3752d2f1fd6d119fd3fde8">constrainParticle</reimplements>
        <param>
          <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
          <declname>ex</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>worldpos</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worldpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle position to be constrained given in world coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the particle in terms of a radius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if there was no collision, else the maximum impact depth. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="212" column="11" bodyfile="de/hackcraft/world/World.cpp" bodystart="379" bodyend="393"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classWorld_1af24aed53a40e14133471a02840adce70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classWorld" kindref="compound">World</ref> *</type>
        <definition>World * getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/World.h" line="110" column="18" bodyfile="de/hackcraft/world/World.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The Game-Object-Managing World-Database-Class. </para>
    </briefdescription>
    <detaileddescription>
<para>Cares about spawning, indexing, searching, messaging, updating, rendering. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>World</label>
        <link refid="classWorld"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Subsystem</label>
        <link refid="classSubsystem"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15">
        <label>unordered_map&lt; Geokey, std::list&lt; Entity * &gt; &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>stringstream</label>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vector&lt; Binding * &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Component</label>
        <link refid="structComponent"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+object</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+prebinds</edgelabel>
          <edgelabel>+postbinds</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>+cname</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>World</label>
        <link refid="classWorld"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-mIndex</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-mVisobjects</edgelabel>
          <edgelabel>-mUncluster</edgelabel>
          <edgelabel>-mCorpses</edgelabel>
          <edgelabel>-mObjects</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+subsystems</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>-mTiming</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-mGeomap</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>+instance</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>-mGroupIndex</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>LevelStreamLogger</label>
        <link refid="classLevelStreamLogger"/>
        <childnode refid="18" relation="usage">
          <edgelabel>-logstream</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>basic_istream&lt; Char &gt;</label>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>string</label>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>basic_iostream&lt; Char &gt;</label>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>map&lt; OID, Entity * &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>map&lt; OID, World::Group * &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>Group</label>
        <link refid="structWorld_1_1Group"/>
        <childnode refid="28" relation="usage">
          <edgelabel>+members</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>+name</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Subsystem</label>
        <link refid="classSubsystem"/>
      </node>
      <node id="10">
        <label>basic_string&lt; char &gt;</label>
      </node>
      <node id="16">
        <label>Logger</label>
        <link refid="classLogger"/>
        <childnode refid="17" relation="usage">
          <edgelabel>-infoLogger</edgelabel>
          <edgelabel>-traceLogger</edgelabel>
          <edgelabel>-warnLogger</edgelabel>
          <edgelabel>-errorLogger</edgelabel>
          <edgelabel>-debugLogger</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>-globalAppender</edgelabel>
          <edgelabel>-appender</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-qualifiedLoggerName</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-parentLogger</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>list&lt; Subsystem * &gt;</label>
        <childnode refid="2" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Entity</label>
        <link refid="classEntity"/>
        <childnode refid="5" relation="usage">
          <edgelabel>+components</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>+name</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Binding</label>
        <link refid="classBinding"/>
      </node>
      <node id="25">
        <label>Appender</label>
        <link refid="classAppender"/>
      </node>
      <node id="23">
        <label>ios_base</label>
      </node>
      <node id="13">
        <label>Timing</label>
        <link refid="classTiming"/>
      </node>
      <node id="11">
        <label>list&lt; Entity * &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>basic_ostream&lt; Char &gt;</label>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>basic_ios&lt; Char &gt;</label>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vector&lt; Component * &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>basic_stringstream&lt; char &gt;</label>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>list&lt; OID &gt;</label>
      </node>
      <node id="14">
        <label>Geomap&lt; Entity * &gt;</label>
        <link refid="classGeomap"/>
        <childnode refid="15" relation="usage">
          <edgelabel>-geomap</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="de/hackcraft/world/World.h" line="40" column="29" bodyfile="de/hackcraft/world/World.h" bodystart="40" bodyend="213"/>
    <listofallmembers>
      <member refid="classWorld_1a626e1bf59dacae5eff0bd2a55eb68270" prot="public" virt="non-virtual"><scope>World</scope><name>addToGroup</name></member>
      <member refid="classWorld_1a25e7e9f128cce679891e92d685f2c7d3" prot="public" virt="virtual"><scope>World</scope><name>advanceTime</name></member>
      <member refid="classWorld_1a1604b9015255299958252d39b1ebb942" prot="public" virt="virtual"><scope>World</scope><name>animateObjects</name></member>
      <member refid="classWorld_1aab871676fa0a3ca277a58fe0da726ae6" prot="public" virt="non-virtual"><scope>World</scope><name>bagFragged</name></member>
      <member refid="classWorld_1a306921a31f28265fb44dce35ce857e87" prot="public" virt="virtual"><scope>World</scope><name>clusterObjects</name></member>
      <member refid="classWorld_1a9ee22233c6bcbe79d287efbd750eeb12" prot="public" virt="virtual"><scope>World</scope><name>constrainParticle</name></member>
      <member refid="classWorld_1aefcbc39cc731e1c193c09a6a98e3ddeb" prot="public" virt="virtual"><scope>World</scope><name>dispatchMessages</name></member>
      <member refid="classWorld_1a465916e327cf3644a812629c8dd6a123" prot="public" virt="virtual"><scope>World</scope><name>drawBack</name></member>
      <member refid="classWorld_1a777e1926a0150b45a189753046343765" prot="public" virt="virtual"><scope>World</scope><name>drawEffect</name></member>
      <member refid="classWorld_1a044d5ff7d7174ed434fcebbef82bc275" prot="public" virt="virtual"><scope>World</scope><name>drawSolid</name></member>
      <member refid="classWorld_1a72030924780161aa4321488f7d998265" prot="public" virt="non-virtual"><scope>World</scope><name>fragObject</name></member>
      <member refid="classWorld_1a2f6a5479005a82dd0fe04ec6721db53b" prot="public" virt="non-virtual"><scope>World</scope><name>getGeoInterval</name></member>
      <member refid="classWorld_1a95348e90be36514df5e725e94a6f607f" prot="public" virt="non-virtual"><scope>World</scope><name>getGroup</name></member>
      <member refid="classSubsystem_1a8e36b642c7e1cc84986eee262c235b0b" prot="public" virt="virtual"><scope>World</scope><name>getId</name></member>
      <member refid="classWorld_1af24aed53a40e14133471a02840adce70" prot="public" virt="non-virtual"><scope>World</scope><name>getInstance</name></member>
      <member refid="classSubsystem_1a4ee385cf4aecac6d59e8fa07a9aa890d" prot="public" virt="virtual"><scope>World</scope><name>getName</name></member>
      <member refid="classWorld_1a2769bfeead57686ff86214f51d6aac22" prot="public" virt="non-virtual"><scope>World</scope><name>getObject</name></member>
      <member refid="classWorld_1ab70719626f2e15f0982e0ff827ef2f2c" prot="public" virt="non-virtual"><scope>World</scope><name>getOID</name></member>
      <member refid="classWorld_1a0a0c75e105c26c4910fb0090205da835" prot="public" virt="non-virtual"><scope>World</scope><name>getTiming</name></member>
      <member refid="classWorld_1a4ab1cf16f005c52aa9a21df948005bee" prot="public" virt="non-virtual"><scope>World</scope><name>getViewdistance</name></member>
      <member refid="classWorld_1ad93f12e9e0e43f9d988512ae3a51a014" prot="public" virt="non-virtual"><scope>World</scope><name>instance</name></member>
      <member refid="classWorld_1af42b1d8da46f0bd6298acdc159027857" prot="private" virt="non-virtual"><scope>World</scope><name>logger</name></member>
      <member refid="classWorld_1ab2eabc419abaf483cdf2b3a91b9348f7" prot="private" virt="non-virtual"><scope>World</scope><name>mCorpses</name></member>
      <member refid="classWorld_1afdfb4e9cf4ea67b6ea0ab103cb92d20e" prot="private" virt="non-virtual"><scope>World</scope><name>mGeomap</name></member>
      <member refid="classWorld_1a37d49890db3c27365bc531ad70cad188" prot="private" virt="non-virtual"><scope>World</scope><name>mGroupIndex</name></member>
      <member refid="classWorld_1af72869afa0a88a164369b20cc1e6009c" prot="private" virt="non-virtual"><scope>World</scope><name>mIndex</name></member>
      <member refid="classWorld_1afd1bdf08f5d9f879539b18bd7c1504da" prot="private" virt="non-virtual"><scope>World</scope><name>mObjects</name></member>
      <member refid="classWorld_1a1e8fe9329011c9af5569ddf74d0864c4" prot="private" virt="non-virtual"><scope>World</scope><name>mTiming</name></member>
      <member refid="classWorld_1adecc17e660758bc93aaa0f0b96ae7297" prot="private" virt="non-virtual"><scope>World</scope><name>mUncluster</name></member>
      <member refid="classWorld_1ad9f8c63ca34d8b9eeee00a39a7aa1d6e" prot="private" virt="non-virtual"><scope>World</scope><name>mViewdistance</name></member>
      <member refid="classWorld_1a9c0c47f03549688a4279d736aae1cdc3" prot="private" virt="non-virtual"><scope>World</scope><name>mVisobjects</name></member>
      <member refid="classWorld_1aae0ed18d0b84c06229f76ca702257889" prot="private" virt="non-virtual"><scope>World</scope><name>mVisorigin</name></member>
      <member refid="classWorld_1a778a28302a6cdf2a1db34032f0893987" prot="public" virt="non-virtual"><scope>World</scope><name>sendMessage</name></member>
      <member refid="classWorld_1ad5fb828f792b28fac443a1e1311259b5" prot="public" virt="virtual"><scope>World</scope><name>setupView</name></member>
      <member refid="classWorld_1a42082655a5a3194c6797656993cb7ebb" prot="public" virt="non-virtual"><scope>World</scope><name>setViewdistance</name></member>
      <member refid="classWorld_1a469014512118f1b7ca668ac55f3adc2b" prot="public" virt="non-virtual"><scope>World</scope><name>spawnObject</name></member>
      <member refid="classWorld_1a4790b122e2a356254b470b6cf97bd841" prot="public" virt="non-virtual"><scope>World</scope><name>subsystems</name></member>
      <member refid="classWorld_1a56676650cac0479af5dde54ada1884e0" prot="public" virt="virtual"><scope>World</scope><name>transformObjects</name></member>
      <member refid="classWorld_1a75e827b8787e735882f60c266d58e02e" prot="public" virt="non-virtual"><scope>World</scope><name>World</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
