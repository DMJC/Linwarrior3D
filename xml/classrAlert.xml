<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrAlert" kind="class" language="C++" prot="public">
    <compoundname>rAlert</compoundname>
    <basecompoundref refid="structComponent" prot="public" virt="non-virtual">Component</basecompoundref>
    <includes local="no">rAlert.h</includes>
    <innerclass refid="structrAlert_1_1rShape" prot="public">rAlert::rShape</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classrAlert_1ab6a3de68965b8f71ff914a03321757f4" prot="public" static="yes" mutable="no">
        <type>std::string</type>
        <definition>std::string cname</definition>
        <argsstring></argsstring>
        <name>cname</name>
        <initializer>= &quot;ALERT&quot;</initializer>
        <briefdescription>
<para>Identifier for this component (all uppercase letters without leading &quot;r&quot;). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="49" column="24" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1a08d90b44549babc6b8c5154f371aa12f" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int cid</definition>
        <argsstring></argsstring>
        <name>cid</name>
        <initializer>= 5688</initializer>
        <briefdescription>
<para>A unique random number (0-9999) to identify this component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="51" column="25" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1a1e53082d5de1844aa1163f7326d3b514" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool sDrawzone</definition>
        <argsstring></argsstring>
        <name>sDrawzone</name>
        <initializer>= !true</initializer>
        <briefdescription>
<para>Draw zones for debugging. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="53" column="17" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classrAlert_1ac20f1725a3c0b550d07ca0c4c002c022" prot="public" static="no" mutable="no">
        <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
        <definition>OID id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="55" column="9" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1abde136e920ef822c36b8d7ebe5e1e38c" prot="public" static="no" mutable="no">
        <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
        <definition>OID receiver</definition>
        <argsstring></argsstring>
        <name>receiver</name>
        <briefdescription>
<para>The group of receivers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="58" column="9" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1acdea3192c7c9a99816f27e88da0eeff2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool positive</definition>
        <argsstring></argsstring>
        <name>positive</name>
        <briefdescription>
<para>Use positive shape (true) or negative of shape (false) as zone? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="60" column="10" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1a27ab39ab356c935801c30cac36994915" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool posedge</definition>
        <argsstring></argsstring>
        <name>posedge</name>
        <briefdescription>
<para>Fire message when entering (true) or exiting (false) the zone? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="62" column="10" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1ad88994ce17a3f0a9c5b862cc4636f54f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool once</definition>
        <argsstring></argsstring>
        <name>once</name>
        <briefdescription>
<para>Fire message only once (true) or always when conditions are true? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="64" column="10" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1a81c2fedc2b264e38054fc2620e9edce2" prot="public" static="no" mutable="no">
        <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
        <definition>OID fusedelay</definition>
        <argsstring></argsstring>
        <name>fusedelay</name>
        <briefdescription>
<para>Delay for the delivery of the notification message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="66" column="9" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1ac469ee3ce15481fd69195159a6e7f3b1" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref> &gt;</type>
        <definition>std::set&lt;OID&gt; inc_sense</definition>
        <argsstring></argsstring>
        <name>inc_sense</name>
        <briefdescription>
<para>Reacting only on triggers with such Tags: </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="68" column="14" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1adb0af6bd6df8aa929a78b079b55b70ab" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref> &gt;</type>
        <definition>std::set&lt;OID&gt; exc_sense</definition>
        <argsstring></argsstring>
        <name>exc_sense</name>
        <briefdescription>
<para>But not reacting on triggers with such Tags: </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="70" column="14" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1a68cb9471e1ad21997e97958ca6662e04" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string msgtype</definition>
        <argsstring></argsstring>
        <name>msgtype</name>
        <briefdescription>
<para>Type of the message to be sent when triggered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="72" column="17" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1ab145bc5f5205ec949d7c4d79ab4bae41" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string msgtext</definition>
        <argsstring></argsstring>
        <name>msgtext</name>
        <briefdescription>
<para>Text of the message to be sent when triggered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="74" column="17" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1a5050a760c11da521cd4aee6336f6529f" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float radius</definition>
        <argsstring></argsstring>
        <name>radius</name>
        <briefdescription>
<para>Overall radius of this alert zone for clustering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="77" column="11" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1ab7e631f7e7be27dc8432b44ad50fdf68" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fired</definition>
        <argsstring></argsstring>
        <name>fired</name>
        <briefdescription>
<para>Set true when the message was fired at least once - initially false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="79" column="10" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrAlert_1ac50a4ed3ff96dff0c9364f09e9b4b900" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref> &gt;</type>
        <definition>std::set&lt;OID&gt; intruders</definition>
        <argsstring></argsstring>
        <name>intruders</name>
        <briefdescription>
<para>Lists object currently inside the tracked zone. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="81" column="14" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrAlert_1a79d294a6b8ddeeb021ef6288eda106ed" prot="protected" static="no" mutable="no">
        <type><ref refid="structrAlert_1_1rShape" kindref="compound">rShape</ref></type>
        <definition>rShape shape</definition>
        <argsstring></argsstring>
        <name>shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="93" column="12" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrAlert_1a41a46c0cac3b0589f0dc9a8cc62fa8a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rAlert</definition>
        <argsstring>(Entity *obj, float *center, float *range, int shapetype, std::string msgtype, std::string msgtext, OID receiver, std::set&lt; OID &gt; *include, std::set&lt; OID &gt; *exclude, bool positive=true, bool posedge=true, bool once=false, OID fusedelay=0)</argsstring>
        <name>rAlert</name>
        <param>
          <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>center</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>range</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shapetype</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>msgtype</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>msgtext</declname>
        </param>
        <param>
          <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>std::set&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref> &gt; *</type>
          <declname>include</declname>
        </param>
        <param>
          <type>std::set&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref> &gt; *</type>
          <declname>exclude</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>positive</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>posedge</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>once</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref></type>
          <declname>fusedelay</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="96" column="5" bodyfile="de/hackcraft/world/sub/trigger/rAlert.cpp" bodystart="19" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classrAlert_1a5a4433ba3079abada4fd174c2ee38a83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float detect</definition>
        <argsstring>(rTrigger *trigger)</argsstring>
        <name>detect</name>
        <param>
          <type><ref refid="classrTrigger" kindref="compound">rTrigger</ref> *</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="98" column="11" bodyfile="de/hackcraft/world/sub/trigger/rAlert.cpp" bodystart="43" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classrAlert_1a3635ad3e6fc41e293b0c0025a33076e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void drawSystemEffect</definition>
        <argsstring>()</argsstring>
        <name>drawSystemEffect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="99" column="18" bodyfile="de/hackcraft/world/sub/trigger/rAlert.cpp" bodystart="118" bodyend="325"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Checks a defined area for certain intruding trigger-objects (most likely the player). </para>
    </briefdescription>
    <detaileddescription>
<para>When such an intrusion is detected a message is sent to a given group of objects. Those receivers may then react on that message.</para>
<para>Some ideas:<itemizedlist>
<listitem><para>Enemies powering up as soon as you enter a zone (pop WAIT state).</para>
</listitem><listitem><para>Enemies collectively attacking the intruder (push ATTACK target).</para>
</listitem><listitem><para>Allied backup moving in after you (push GOTO destination).</para>
</listitem><listitem><para>Joining you when reaching a roundevous point (push FOLLOW target).</para>
</listitem><listitem><para>Warning and mission abort when leaving mission area.</para>
</listitem></itemizedlist>
</para>
<para>Some further ideas: Message aggregation and processing objects for and, or, xor, forwarding, would allow extended mission scripting. Likewise switching alerts on and off would present opportunities.</para>
<para>A cone or pyramid for detection would make a nice surveilance camera. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Component</label>
        <link refid="structComponent"/>
      </node>
      <node id="1">
        <label>rAlert</label>
        <link refid="classrAlert"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>vector&lt; Binding * &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Component</label>
        <link refid="structComponent"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+object</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+prebinds</edgelabel>
          <edgelabel>+postbinds</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+cname</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>rAlert</label>
        <link refid="classrAlert"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#shape</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+msgtype</edgelabel>
          <edgelabel>+cname</edgelabel>
          <edgelabel>+msgtext</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+inc_sense</edgelabel>
          <edgelabel>+intruders</edgelabel>
          <edgelabel>+exc_sense</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>basic_string&lt; char &gt;</label>
      </node>
      <node id="3">
        <label>Entity</label>
        <link refid="classEntity"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+components</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+name</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Binding</label>
        <link refid="classBinding"/>
      </node>
      <node id="9">
        <label>rShape</label>
        <link refid="structrAlert_1_1rShape"/>
      </node>
      <node id="4">
        <label>vector&lt; Component * &gt;</label>
        <childnode refid="2" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>set&lt; OID &gt;</label>
      </node>
    </collaborationgraph>
    <location file="de/hackcraft/world/sub/trigger/rAlert.h" line="46" column="30" bodyfile="de/hackcraft/world/sub/trigger/rAlert.h" bodystart="46" bodyend="100"/>
    <listofallmembers>
      <member refid="structComponent_1a03c996f9fcf0e10baeb3e700be0c409a" prot="public" virt="non-virtual"><scope>rAlert</scope><name>active</name></member>
      <member refid="structComponent_1a9be6e2d0e81c55db1578d42ec617cbca" prot="public" virt="non-virtual"><scope>rAlert</scope><name>addBinding</name></member>
      <member refid="structComponent_1a76752321cf3827ebb052e7b9b93f3db0" prot="public" virt="non-virtual"><scope>rAlert</scope><name>addBinding</name></member>
      <member refid="structComponent_1a21737bd2efddc8007d58214f722959f1" prot="public" virt="virtual"><scope>rAlert</scope><name>animate</name></member>
      <member refid="structComponent_1a2cd2e7e39bbe0feb04e3f49d92383051" prot="public" virt="virtual"><scope>rAlert</scope><name>camera</name></member>
      <member refid="classrAlert_1a08d90b44549babc6b8c5154f371aa12f" prot="public" virt="non-virtual"><scope>rAlert</scope><name>cid</name></member>
      <member refid="structComponent_1a12d7214a9a58d47b3bc3c2e91f6d0c32" prot="public" virt="virtual"><scope>rAlert</scope><name>clone</name></member>
      <member refid="classrAlert_1ab6a3de68965b8f71ff914a03321757f4" prot="public" virt="non-virtual"><scope>rAlert</scope><name>cname</name></member>
      <member refid="structComponent_1a6b5149d0ce5984ffa0fdfcb0660c7bd5" prot="public" virt="non-virtual"><scope>rAlert</scope><name>Component</name></member>
      <member refid="structComponent_1af0c987007ef181ec233d8333d399bab6" prot="public" virt="virtual"><scope>rAlert</scope><name>constrain</name></member>
      <member refid="structComponent_1abea7dc29223077e4c8b30eda0e487242" prot="public" virt="virtual"><scope>rAlert</scope><name>damage</name></member>
      <member refid="classrAlert_1a5a4433ba3079abada4fd174c2ee38a83" prot="public" virt="non-virtual"><scope>rAlert</scope><name>detect</name></member>
      <member refid="structComponent_1afa90087fb4f9485be9db86581d8ac822" prot="public" virt="virtual"><scope>rAlert</scope><name>drawEffect</name></member>
      <member refid="structComponent_1a98233a0af860521dafed683b50128886" prot="public" virt="virtual"><scope>rAlert</scope><name>drawHUD</name></member>
      <member refid="structComponent_1a82d72d455a63508dd949d552ed3713b5" prot="public" virt="virtual"><scope>rAlert</scope><name>drawSolid</name></member>
      <member refid="classrAlert_1a3635ad3e6fc41e293b0c0025a33076e1" prot="public" virt="virtual"><scope>rAlert</scope><name>drawSystemEffect</name></member>
      <member refid="classrAlert_1adb0af6bd6df8aa929a78b079b55b70ab" prot="public" virt="non-virtual"><scope>rAlert</scope><name>exc_sense</name></member>
      <member refid="classrAlert_1ab7e631f7e7be27dc8432b44ad50fdf68" prot="public" virt="non-virtual"><scope>rAlert</scope><name>fired</name></member>
      <member refid="structComponent_1ad9819bfdd9490c9b319093ac5b97822f" prot="public" virt="virtual"><scope>rAlert</scope><name>frag</name></member>
      <member refid="classrAlert_1a81c2fedc2b264e38054fc2620e9edce2" prot="public" virt="non-virtual"><scope>rAlert</scope><name>fusedelay</name></member>
      <member refid="structComponent_1acdfa5be80a3b7f56ac515b1bb1305e68" prot="public" virt="virtual"><scope>rAlert</scope><name>getId</name></member>
      <member refid="classrAlert_1ac20f1725a3c0b550d07ca0c4c002c022" prot="public" virt="non-virtual"><scope>rAlert</scope><name>id</name></member>
      <member refid="classrAlert_1ac469ee3ce15481fd69195159a6e7f3b1" prot="public" virt="non-virtual"><scope>rAlert</scope><name>inc_sense</name></member>
      <member refid="classrAlert_1ac50a4ed3ff96dff0c9364f09e9b4b900" prot="public" virt="non-virtual"><scope>rAlert</scope><name>intruders</name></member>
      <member refid="structComponent_1ab92eb9c4dcb16f9e63ca5fe371144983" prot="public" virt="virtual"><scope>rAlert</scope><name>listener</name></member>
      <member refid="classrAlert_1ab145bc5f5205ec949d7c4d79ab4bae41" prot="public" virt="non-virtual"><scope>rAlert</scope><name>msgtext</name></member>
      <member refid="classrAlert_1a68cb9471e1ad21997e97958ca6662e04" prot="public" virt="non-virtual"><scope>rAlert</scope><name>msgtype</name></member>
      <member refid="structComponent_1a4c442f22ef3b8c6790b56015beb57566" prot="public" virt="non-virtual"><scope>rAlert</scope><name>object</name></member>
      <member refid="classrAlert_1ad88994ce17a3f0a9c5b862cc4636f54f" prot="public" virt="non-virtual"><scope>rAlert</scope><name>once</name></member>
      <member refid="classrAlert_1a27ab39ab356c935801c30cac36994915" prot="public" virt="non-virtual"><scope>rAlert</scope><name>posedge</name></member>
      <member refid="classrAlert_1acdea3192c7c9a99816f27e88da0eeff2" prot="public" virt="non-virtual"><scope>rAlert</scope><name>positive</name></member>
      <member refid="structComponent_1ab7bcd2366fafecdcdd8bbcbfb0a43c51" prot="public" virt="non-virtual"><scope>rAlert</scope><name>postbind</name></member>
      <member refid="structComponent_1abc081daafef3ffd221d8746b1e4c2f78" prot="public" virt="non-virtual"><scope>rAlert</scope><name>postbinds</name></member>
      <member refid="structComponent_1a5bd6391b052df5d5a0db4554b2c3fe66" prot="public" virt="non-virtual"><scope>rAlert</scope><name>prebind</name></member>
      <member refid="structComponent_1a4d900b2c72ca399a620b6eefce26c018" prot="public" virt="non-virtual"><scope>rAlert</scope><name>prebinds</name></member>
      <member refid="classrAlert_1a5050a760c11da521cd4aee6336f6529f" prot="public" virt="non-virtual"><scope>rAlert</scope><name>radius</name></member>
      <member refid="classrAlert_1a41a46c0cac3b0589f0dc9a8cc62fa8a4" prot="public" virt="non-virtual"><scope>rAlert</scope><name>rAlert</name></member>
      <member refid="classrAlert_1abde136e920ef822c36b8d7ebe5e1e38c" prot="public" virt="non-virtual"><scope>rAlert</scope><name>receiver</name></member>
      <member refid="classrAlert_1a1e53082d5de1844aa1163f7326d3b514" prot="public" virt="non-virtual"><scope>rAlert</scope><name>sDrawzone</name></member>
      <member refid="classrAlert_1a79d294a6b8ddeeb021ef6288eda106ed" prot="protected" virt="non-virtual"><scope>rAlert</scope><name>shape</name></member>
      <member refid="structComponent_1a2260c02c44eeca44f51bf4b76f3bd306" prot="public" virt="virtual"><scope>rAlert</scope><name>spawn</name></member>
      <member refid="structComponent_1a620c3ab0c7ebcfa486e3f3c3d1c442b3" prot="public" virt="virtual"><scope>rAlert</scope><name>transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
