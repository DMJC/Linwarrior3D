<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classComputerSystem" kind="class" language="C++" prot="public">
    <compoundname>ComputerSystem</compoundname>
    <basecompoundref refid="classSubsystem" prot="public" virt="non-virtual">Subsystem</basecompoundref>
    <includes local="no">ComputerSystem.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classComputerSystem_1af42b1d8da46f0bd6298acdc159027857" prot="private" static="yes" mutable="no">
        <type><ref refid="classLogger" kindref="compound">Logger</ref> *</type>
        <definition>Logger * logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= <ref refid="classLogger_1ac11c529e5152e544fbc4c6594add48b6" kindref="member">Logger::getLogger</ref>(&quot;de.hackcraft.world.sub.computer.ComputerSystem&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="89" column="19" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComputerSystem_1a86e9b4eca8e6fe7a27543e7e1dbdd5d1" prot="private" static="yes" mutable="no">
        <type><ref refid="classComputerSystem" kindref="compound">ComputerSystem</ref> *</type>
        <definition>ComputerSystem * instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <initializer>= NULL</initializer>
        <briefdescription>
<para>Current singleton instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="92" column="27" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classComputerSystem_1a3e587063e87a1167af7d68559bf031e5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structrComcom" kindref="compound">rComcom</ref> * &gt;</type>
        <definition>std::vector&lt;rComcom*&gt; comcoms</definition>
        <argsstring></argsstring>
        <name>comcoms</name>
        <briefdescription>
<para>Communication computers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="96" column="17" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComputerSystem_1ae89d7879fb83a5f37526ba0736ec3b89" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref>, <ref refid="structrComcom" kindref="compound">rComcom</ref> * &gt;</type>
        <definition>std::map&lt;OID,rComcom*&gt; comcomsIndex</definition>
        <argsstring></argsstring>
        <name>comcomsIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="97" column="14" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComputerSystem_1adc6b09aeecf616ab2df8f2bfe90d104f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structrController" kindref="compound">rController</ref> * &gt;</type>
        <definition>std::vector&lt;rController*&gt; controllers</definition>
        <argsstring></argsstring>
        <name>controllers</name>
        <briefdescription>
<para>Autopilot controllers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="100" column="17" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComputerSystem_1aa68a2239491288fceec5914efde6cab5" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref>, <ref refid="structrController" kindref="compound">rController</ref> * &gt;</type>
        <definition>std::map&lt;OID,rController*&gt; controllersIndex</definition>
        <argsstring></argsstring>
        <name>controllersIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="101" column="14" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComputerSystem_1a300e53356b32ceee2f51538a1e128612" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structrForcom" kindref="compound">rForcom</ref> * &gt;</type>
        <definition>std::vector&lt;rForcom*&gt; forcoms</definition>
        <argsstring></argsstring>
        <name>forcoms</name>
        <briefdescription>
<para>Computers for forward looking HUD. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="104" column="17" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComputerSystem_1a5fde17068976e25ec7faf54dbc1df5e8" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref>, <ref refid="structrForcom" kindref="compound">rForcom</ref> * &gt;</type>
        <definition>std::map&lt;OID,rForcom*&gt; forcomsIndex</definition>
        <argsstring></argsstring>
        <name>forcomsIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="105" column="14" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComputerSystem_1aa8436cd559cde160fc3b4feff57c2e3f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structrNavcom" kindref="compound">rNavcom</ref> * &gt;</type>
        <definition>std::vector&lt;rNavcom*&gt; navcoms</definition>
        <argsstring></argsstring>
        <name>navcoms</name>
        <briefdescription>
<para>Navigation computers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="108" column="17" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComputerSystem_1a8f46a79845a6d74e6553788a845aa0e1" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="OID_8h_1af76d31f8678f8d4900de60548747055e" kindref="member">OID</ref>, <ref refid="structrNavcom" kindref="compound">rNavcom</ref> * &gt;</type>
        <definition>std::map&lt;OID,rNavcom*&gt; navcomsIndex</definition>
        <argsstring></argsstring>
        <name>navcomsIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="109" column="14" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classComputerSystem_1ad440d6f1a9ff602a5076c8703340ca9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComputerSystem" kindref="compound">ComputerSystem</ref> *</type>
        <definition>ComputerSystem * getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <briefdescription>
<para>Get current singleton instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="30" column="27" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classComputerSystem_1a0426c885a4b72494c064c21c5e8d954f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ComputerSystem</definition>
        <argsstring>()</argsstring>
        <name>ComputerSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="33" column="5" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1a1e95bb5bec824c97a5189e01e54da4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>~ComputerSystem</definition>
        <argsstring>()</argsstring>
        <name>~ComputerSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="34" column="13" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.cpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1aa0dbab66668187001ee14e0e68e8528b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add</definition>
        <argsstring>(rComcom *comcom)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="structrComcom" kindref="compound">rComcom</ref> *</type>
          <declname>comcom</declname>
        </param>
        <briefdescription>
<para>Add a command computer to the managed components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="37" column="10" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1a50a4d884c93350ba2c6329be137f1bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add</definition>
        <argsstring>(rController *controller)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="structrController" kindref="compound">rController</ref> *</type>
          <declname>controller</declname>
        </param>
        <briefdescription>
<para>Add a autopilot controller to the managed components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="40" column="10" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1a2539489ba69ea653ff5ee0f1c70fb788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add</definition>
        <argsstring>(rForcom *forcom)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="structrForcom" kindref="compound">rForcom</ref> *</type>
          <declname>forcom</declname>
        </param>
        <briefdescription>
<para>Add a forward HUD computer to the managed components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="43" column="10" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1ae06beb05d64729758e39e6a2aab8a282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add</definition>
        <argsstring>(rNavcom *navcom)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="structrNavcom" kindref="compound">rNavcom</ref> *</type>
          <declname>navcom</declname>
        </param>
        <briefdescription>
<para>Add a navigation computer to the managed components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="46" column="10" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1ad0f555122462d7c7444758ba58689010" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float</type>
        <definition>virtual float constrainParticle</definition>
        <argsstring>(Entity *ex, float *worldpos, float radius)</argsstring>
        <name>constrainParticle</name>
        <reimplements refid="classSubsystem_1a1954eb6f5a3752d2f1fd6d119fd3fde8">constrainParticle</reimplements>
        <param>
          <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
          <declname>ex</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>worldpos</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Limit position to accessible areas and returns impact depth. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worldpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle position to be constrained given in world coordinates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the particle in terms of a radius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if there was no collision, else the maximum impact depth. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="56" column="19" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1ad6a7b46bef07e40d079342cb85364f50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void advanceTime</definition>
        <argsstring>(int deltamsec)</argsstring>
        <name>advanceTime</name>
        <reimplements refid="classSubsystem_1ae539443a3a32579b89439ec22aaba32b">advanceTime</reimplements>
        <param>
          <type>int</type>
          <declname>deltamsec</declname>
        </param>
        <briefdescription>
<para>Advance simulation time for one frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="60" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1afca955411c811e1a0af97e0969f6956e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void clusterObjects</definition>
        <argsstring>()</argsstring>
        <name>clusterObjects</name>
        <reimplements refid="classSubsystem_1aac346cec652a4bb213bee2a5e74c7fc9">clusterObjects</reimplements>
        <briefdescription>
<para>Re-build spatial clustering of objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="63" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1a1cfbbbc439131c5353cd1e766478da27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void dispatchMessages</definition>
        <argsstring>()</argsstring>
        <name>dispatchMessages</name>
        <reimplements refid="classSubsystem_1affbd764192264a4e1e440cf073999278">dispatchMessages</reimplements>
        <briefdescription>
<para>Deliver overdue messages to objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="66" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1a1604b9015255299958252d39b1ebb942" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void animateObjects</definition>
        <argsstring>()</argsstring>
        <name>animateObjects</name>
        <reimplements refid="classSubsystem_1a1981e562883e5e69767bec35bcee7af1">animateObjects</reimplements>
        <briefdescription>
<para>Let all objects process input, adjust pose and calculate physics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="69" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.cpp" bodystart="56" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1a6f3997a696073fafdf6226143824eab4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void transformObjects</definition>
        <argsstring>()</argsstring>
        <name>transformObjects</name>
        <reimplements refid="classSubsystem_1af1f4f853081af6fcb5037b99618009d2">transformObjects</reimplements>
        <briefdescription>
<para>Let all objects calculate transformation matrices etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="72" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1a079b6cd12491c571db088711044fa8bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void setupView</definition>
        <argsstring>(float *pos, float *ori)</argsstring>
        <name>setupView</name>
        <reimplements refid="classSubsystem_1a7e9713a6b941a1ff3e85a2e10cd4946f">setupView</reimplements>
        <param>
          <type>float *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ori</declname>
        </param>
        <briefdescription>
<para>Setup structures for rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="75" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1ad6ad3f680e505f98d83d049e15f0d797" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool drawBack</definition>
        <argsstring>()</argsstring>
        <name>drawBack</name>
        <reimplements refid="classSubsystem_1ab6879b94c7c750768750669e7feb9c97">drawBack</reimplements>
        <briefdescription>
<para>Draws background (skybox). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>False if the background was not painted or is not covered completely - true otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="80" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1a82d72d455a63508dd949d552ed3713b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void drawSolid</definition>
        <argsstring>()</argsstring>
        <name>drawSolid</name>
        <reimplements refid="classSubsystem_1a7037e4616081238dc81eb0e947cba4f1">drawSolid</reimplements>
        <briefdescription>
<para>Draw all <ref refid="classObject" kindref="compound">Object</ref>&apos;s solid surfaces (calls their drawSolid method). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="83" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classComputerSystem_1afa90087fb4f9485be9db86581d8ac822" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void drawEffect</definition>
        <argsstring>()</argsstring>
        <name>drawEffect</name>
        <reimplements refid="classSubsystem_1a743d69df45ff83f7531c4eeb0e225405">drawEffect</reimplements>
        <briefdescription>
<para>Draw all <ref refid="classObject" kindref="compound">Object</ref>&apos;s effects (calls their drawEffect method). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="86" column="18" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="86" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ComputerSystem</label>
        <link refid="classComputerSystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Subsystem</label>
        <link refid="classSubsystem"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16">
        <label>stringstream</label>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>vector&lt; Binding * &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>rForcom</label>
        <link refid="structrForcom"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+cname</edgelabel>
          <edgelabel>+mMessage</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Component</label>
        <link refid="structComponent"/>
        <childnode refid="6" relation="usage">
          <edgelabel>+object</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+prebinds</edgelabel>
          <edgelabel>+postbinds</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+cname</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>rComcom</label>
        <link refid="structrComcom"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>#mConsole</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+cname</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>ComputerSystem</label>
        <link refid="classComputerSystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-controllersIndex</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>-controllers</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>-forcomsIndex</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>-navcomsIndex</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>-comcoms</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>-instance</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>-comcomsIndex</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>-navcoms</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>-forcoms</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>LevelStreamLogger</label>
        <link refid="classLevelStreamLogger"/>
        <childnode refid="16" relation="usage">
          <edgelabel>-logstream</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>vector&lt; rController * &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>basic_istream&lt; Char &gt;</label>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>vector&lt; rNavcom * &gt;</label>
        <childnode refid="28" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>string</label>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>basic_iostream&lt; Char &gt;</label>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>IComputer</label>
        <link refid="classIComputer"/>
      </node>
      <node id="4">
        <label>rController</label>
        <link refid="structrController"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>#commandStack</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+cname</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>map&lt; OID, rController * &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Subsystem</label>
        <link refid="classSubsystem"/>
      </node>
      <node id="36">
        <label>vector&lt; rForcom * &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>basic_string&lt; char &gt;</label>
      </node>
      <node id="14">
        <label>Logger</label>
        <link refid="classLogger"/>
        <childnode refid="15" relation="usage">
          <edgelabel>-infoLogger</edgelabel>
          <edgelabel>-traceLogger</edgelabel>
          <edgelabel>-warnLogger</edgelabel>
          <edgelabel>-errorLogger</edgelabel>
          <edgelabel>-debugLogger</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>-globalAppender</edgelabel>
          <edgelabel>-appender</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-qualifiedLoggerName</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-parentLogger</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Entity</label>
        <link refid="classEntity"/>
        <childnode refid="7" relation="usage">
          <edgelabel>+components</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+name</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Binding</label>
        <link refid="classBinding"/>
      </node>
      <node id="23">
        <label>Appender</label>
        <link refid="classAppender"/>
      </node>
      <node id="21">
        <label>ios_base</label>
      </node>
      <node id="30">
        <label>vector&lt; int &gt;</label>
      </node>
      <node id="29">
        <label>vector&lt; std::vector&lt; float &gt; &gt;</label>
      </node>
      <node id="13">
        <label>vector&lt; OID &gt;</label>
      </node>
      <node id="27">
        <label>map&lt; OID, rNavcom * &gt;</label>
        <childnode refid="28" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>map&lt; OID, rForcom * &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>basic_ostream&lt; Char &gt;</label>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>basic_ios&lt; Char &gt;</label>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vector&lt; Component * &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>basic_stringstream&lt; char &gt;</label>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>rNavcom</label>
        <link refid="structrNavcom"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>+mPOIs</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+cname</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>+mRoute</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>vector&lt; rComcom * &gt;</label>
        <childnode refid="32" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>map&lt; OID, rComcom * &gt;</label>
        <childnode refid="32" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>Console</label>
        <link refid="classConsole"/>
      </node>
    </collaborationgraph>
    <location file="de/hackcraft/world/sub/computer/ComputerSystem.h" line="27" column="38" bodyfile="de/hackcraft/world/sub/computer/ComputerSystem.h" bodystart="27" bodyend="110"/>
    <listofallmembers>
      <member refid="classComputerSystem_1aa0dbab66668187001ee14e0e68e8528b" prot="public" virt="non-virtual"><scope>ComputerSystem</scope><name>add</name></member>
      <member refid="classComputerSystem_1a50a4d884c93350ba2c6329be137f1bf2" prot="public" virt="non-virtual"><scope>ComputerSystem</scope><name>add</name></member>
      <member refid="classComputerSystem_1a2539489ba69ea653ff5ee0f1c70fb788" prot="public" virt="non-virtual"><scope>ComputerSystem</scope><name>add</name></member>
      <member refid="classComputerSystem_1ae06beb05d64729758e39e6a2aab8a282" prot="public" virt="non-virtual"><scope>ComputerSystem</scope><name>add</name></member>
      <member refid="classComputerSystem_1ad6a7b46bef07e40d079342cb85364f50" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>advanceTime</name></member>
      <member refid="classComputerSystem_1a1604b9015255299958252d39b1ebb942" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>animateObjects</name></member>
      <member refid="classComputerSystem_1afca955411c811e1a0af97e0969f6956e" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>clusterObjects</name></member>
      <member refid="classComputerSystem_1a3e587063e87a1167af7d68559bf031e5" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>comcoms</name></member>
      <member refid="classComputerSystem_1ae89d7879fb83a5f37526ba0736ec3b89" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>comcomsIndex</name></member>
      <member refid="classComputerSystem_1a0426c885a4b72494c064c21c5e8d954f" prot="public" virt="non-virtual"><scope>ComputerSystem</scope><name>ComputerSystem</name></member>
      <member refid="classComputerSystem_1ad0f555122462d7c7444758ba58689010" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>constrainParticle</name></member>
      <member refid="classComputerSystem_1adc6b09aeecf616ab2df8f2bfe90d104f" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>controllers</name></member>
      <member refid="classComputerSystem_1aa68a2239491288fceec5914efde6cab5" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>controllersIndex</name></member>
      <member refid="classComputerSystem_1a1cfbbbc439131c5353cd1e766478da27" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>dispatchMessages</name></member>
      <member refid="classComputerSystem_1ad6ad3f680e505f98d83d049e15f0d797" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>drawBack</name></member>
      <member refid="classComputerSystem_1afa90087fb4f9485be9db86581d8ac822" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>drawEffect</name></member>
      <member refid="classComputerSystem_1a82d72d455a63508dd949d552ed3713b5" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>drawSolid</name></member>
      <member refid="classComputerSystem_1a300e53356b32ceee2f51538a1e128612" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>forcoms</name></member>
      <member refid="classComputerSystem_1a5fde17068976e25ec7faf54dbc1df5e8" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>forcomsIndex</name></member>
      <member refid="classSubsystem_1a8e36b642c7e1cc84986eee262c235b0b" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>getId</name></member>
      <member refid="classComputerSystem_1ad440d6f1a9ff602a5076c8703340ca9f" prot="public" virt="non-virtual"><scope>ComputerSystem</scope><name>getInstance</name></member>
      <member refid="classSubsystem_1a4ee385cf4aecac6d59e8fa07a9aa890d" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>getName</name></member>
      <member refid="classComputerSystem_1a86e9b4eca8e6fe7a27543e7e1dbdd5d1" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>instance</name></member>
      <member refid="classComputerSystem_1af42b1d8da46f0bd6298acdc159027857" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>logger</name></member>
      <member refid="classComputerSystem_1aa8436cd559cde160fc3b4feff57c2e3f" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>navcoms</name></member>
      <member refid="classComputerSystem_1a8f46a79845a6d74e6553788a845aa0e1" prot="private" virt="non-virtual"><scope>ComputerSystem</scope><name>navcomsIndex</name></member>
      <member refid="classComputerSystem_1a079b6cd12491c571db088711044fa8bd" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>setupView</name></member>
      <member refid="classComputerSystem_1a6f3997a696073fafdf6226143824eab4" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>transformObjects</name></member>
      <member refid="classComputerSystem_1a1e95bb5bec824c97a5189e01e54da4f9" prot="public" virt="virtual"><scope>ComputerSystem</scope><name>~ComputerSystem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
